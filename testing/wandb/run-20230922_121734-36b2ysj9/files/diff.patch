diff --git a/__pycache__/ae_net.cpython-310.pyc b/__pycache__/ae_net.cpython-310.pyc
index cb28127..3ace5ed 100644
Binary files a/__pycache__/ae_net.cpython-310.pyc and b/__pycache__/ae_net.cpython-310.pyc differ
diff --git a/__pycache__/big_net.cpython-310.pyc b/__pycache__/big_net.cpython-310.pyc
index 1874579..12559d7 100644
Binary files a/__pycache__/big_net.cpython-310.pyc and b/__pycache__/big_net.cpython-310.pyc differ
diff --git a/__pycache__/cifar100datamodule.cpython-310.pyc b/__pycache__/cifar100datamodule.cpython-310.pyc
index b2f370b..5c1e174 100644
Binary files a/__pycache__/cifar100datamodule.cpython-310.pyc and b/__pycache__/cifar100datamodule.cpython-310.pyc differ
diff --git a/__pycache__/helper_hpc.cpython-310.pyc b/__pycache__/helper_hpc.cpython-310.pyc
index d127ab3..cbf53a8 100644
Binary files a/__pycache__/helper_hpc.cpython-310.pyc and b/__pycache__/helper_hpc.cpython-310.pyc differ
diff --git a/__pycache__/model.cpython-310.pyc b/__pycache__/model.cpython-310.pyc
index a4b001c..5332c6d 100644
Binary files a/__pycache__/model.cpython-310.pyc and b/__pycache__/model.cpython-310.pyc differ
diff --git a/__pycache__/net.cpython-310.pyc b/__pycache__/net.cpython-310.pyc
index b4c2fd0..e7ea3ef 100644
Binary files a/__pycache__/net.cpython-310.pyc and b/__pycache__/net.cpython-310.pyc differ
diff --git a/__pycache__/randomdatamodule.cpython-310.pyc b/__pycache__/randomdatamodule.cpython-310.pyc
index 987c0b3..490bcdd 100644
Binary files a/__pycache__/randomdatamodule.cpython-310.pyc and b/__pycache__/randomdatamodule.cpython-310.pyc differ
diff --git a/__pycache__/randomdataset.cpython-310.pyc b/__pycache__/randomdataset.cpython-310.pyc
index 6d75ab8..129863a 100644
Binary files a/__pycache__/randomdataset.cpython-310.pyc and b/__pycache__/randomdataset.cpython-310.pyc differ
diff --git a/__pycache__/vgg16.cpython-310.pyc b/__pycache__/vgg16.cpython-310.pyc
index 2303235..96b8dd6 100644
Binary files a/__pycache__/vgg16.cpython-310.pyc and b/__pycache__/vgg16.cpython-310.pyc differ
diff --git a/evolution.py b/evolution.py
index 3ac0df6..ba09cc1 100644
--- a/evolution.py
+++ b/evolution.py
@@ -34,7 +34,7 @@ parser=argparse.ArgumentParser(description="Process some inputs")
 parser.add_argument('--experiment_name', help='experiment name for saving data related to training')
 parser.add_argument('--evo_num_runs', type=int, help='Number of runs used in evolution', default=5)
 
-parser.add_argument('--scaled', action='store_true', help="Use if wanting to evolved conv layers for larger VGG-16 architecture")
+parser.add_argument('--network', help="Specify which architecture to train", default='conv6', type=str)
 
 # evolution params
 parser.add_argument('--evo_gens', type=int, help="number of generations used in evolving solutions", default=50)
@@ -128,7 +128,7 @@ def evolution(generations, population_size, num_children, tournament_size, num_w
     print("\nInitializing")
     for i in tqdm(range(population_size)): #while len(population) < population_size:
         model = Model()
-        if args.scaled:
+        if args.network.lower() == "vgg16":
             net = helper.BigNet(num_classes=len(classnames), classnames=classnames, diversity={"type": args.diversity_type, "pdop": args.pairwise_diversity_op, "ldop": args.layerwise_diversity_op, "k": args.k, "k_strat": args.k_strat})
         else:
             net = helper.Net(num_classes=len(classnames), classnames=classnames, diversity={"type": args.diversity_type, "pdop": args.pairwise_diversity_op, "ldop":args.layerwise_diversity_op, 'k': args.k, 'k_strat': args.k_strat})
@@ -213,7 +213,7 @@ def run():
     helper.config['k_strat'] =  args.k_strat
     helper.config['experiment_type'] = 'evolution'
     helper.config['rand_tech'] = args.rand_tech
-    helper.config['scaled'] = args.scaled
+    helper.config['network'] = args.network
     helper.update_config()
 
     # random_image_paths = helper.create_random_images(64)
diff --git a/testing/net_copy.py b/testing/net_copy.py
index 82ff16c..d4e2082 100644
--- a/testing/net_copy.py
+++ b/testing/net_copy.py
@@ -4,6 +4,8 @@ import pytorch_lightning as pl
 import torch.nn as nn
 import torch.nn.functional as F
 import numpy as np
+import sys
+sys.path.insert(0, '../')
 import helper_hpc as helper
 import time
 
diff --git a/testing/test_vgg16.py b/testing/test_vgg16.py
index d5f785f..33f1418 100644
--- a/testing/test_vgg16.py
+++ b/testing/test_vgg16.py
@@ -13,7 +13,7 @@ import torchmetrics
 import torchvision.models as models
 from net_copy import Net as exists
 import numpy as np
-import helper_hpc as helper
+# import helper_hpc as helper
 from functools import partial
 
 # for data module
@@ -218,7 +218,7 @@ def train_vgg16(data_module, epochs=120, lr=5e-5, val_interval=4):
 if __name__ == "__main__":
     torch.multiprocessing.freeze_support()
 
-    data_module = CIFAR100DataModule(batch_size=64, data_dir="data/", num_workers=min(2, os.cpu_count()), pin_memory=True)
+    data_module = CIFAR100DataModule(batch_size=64, data_dir="../data/", num_workers=min(2, os.cpu_count()), pin_memory=True)
     data_module.prepare_data()
     data_module.setup()
 
