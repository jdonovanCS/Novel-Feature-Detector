C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\core\datamodule.py:88: LightningDeprecationWarning: DataModule property `train_transforms` was deprecated in v1.5 and will be removed in v1.7.
  rank_zero_deprecation(
C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\core\datamodule.py:107: LightningDeprecationWarning: DataModule property `val_transforms` was deprecated in v1.5 and will be removed in v1.7.
  rank_zero_deprecation(
Files already downloaded and verified
Files already downloaded and verified
Training and Evaluating: fitness Gen: 99 Run: 0
cuda:0
Files already downloaded and verified
Files already downloaded and verified
C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\core\datamodule.py:126: LightningDeprecationWarning: DataModule property `test_transforms` was deprecated in v1.5 and will be removed in v1.7.
  rank_zero_deprecation(
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
wandb: logging graph, to disable use `wandb.watch(log_graph=False)`
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name        | Type        | Params
--------------------------------------------
0 | BatchNorm1  | BatchNorm2d | 64
1 | BatchNorm2  | BatchNorm2d | 256
2 | BatchNorm3  | BatchNorm2d | 512
3 | pool        | MaxPool2d   | 0
4 | fc1         | Linear      | 4.2 M
5 | fc2         | Linear      | 524 K
6 | fc3         | Linear      | 5.1 K
7 | dropout1    | Dropout2d   | 0
8 | dropout2    | Dropout2d   | 0
9 | conv_layers | ModuleList  | 1.1 M
--------------------------------------------
5.9 M     Trainable params
0         Non-trainable params
5.9 M     Total params
23.409    Total estimated model params size (MB)






Epoch 0: 100%|███████████████████████████████████████████| 625/625 [00:12<00:00, 49.37it/s, loss=-1.28e+13, v_num=t6g2]0.140625
Traceback (most recent call last):
  File "C:\Users\Jordan\Learning\UVM\Research Projects\Novel-Feature-Detector\train_and_eval.py", line 109, in <module>
    run()
  File "C:\Users\Jordan\Learning\UVM\Research Projects\Novel-Feature-Detector\train_and_eval.py", line 101, in run
    record_progress = helper.train_network(data_module=data_module, filters=pickled_filters[name][run_num][i], epochs=epochs, save_path=save_path, fixed_conv=fixed_conv, novelty_interval=int(args.novelty_interval), val_interval=int(args.test_accuracy_interval))
  File "C:\Users\Jordan\Learning\UVM\Research Projects\Novel-Feature-Detector\helper_hpc.py", line 48, in train_network
    trainer.fit(net, data_module)
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 771, in fit
    self._call_and_handle_interrupt(
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 724, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 812, in _fit_impl
    results = self._run(model, ckpt_path=self.ckpt_path)
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1237, in _run
    results = self._run_stage()
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1324, in _run_stage
    return self._run_train()
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1354, in _run_train
    self.fit_loop.run()
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\loops\base.py", line 205, in run
    self.on_advance_end()
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\loops\fit_loop.py", line 285, in on_advance_end
    epoch_end_outputs = self.trainer._call_lightning_module_hook("training_epoch_end", epoch_end_outputs)
  File "C:\Users\Jordan\anaconda3\envs\EC2\lib\site-packages\pytorch_lightning\trainer\trainer.py", line 1596, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "C:\Users\Jordan\Learning\UVM\Research Projects\Novel-Feature-Detector\net.py", line 107, in training_epoch_end
    avg_acc = torch.stack([x['train_acc'] for x in outputs]).mean()
TypeError: expected Tensor as element 0 in argument 0, but got float